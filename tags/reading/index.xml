<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reading | 대체로 무해함</title>
    <link>https://lethean.github.io/tags/reading/</link>
      <atom:link href="https://lethean.github.io/tags/reading/index.xml" rel="self" type="application/rss+xml" />
    <description>Reading</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>ko-kr</language><copyright>© lethean</copyright><lastBuildDate>Tue, 28 May 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Reading</title>
      <link>https://lethean.github.io/tags/reading/</link>
    </image>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-05-28)</title>
      <link>https://lethean.github.io/2019/05/28/reading-2019-05-28/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/05/28/reading-2019-05-28/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://developers-kr.googleblog.com/2019/05/Flutter-io19.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flutter: 모바일, 웹, 임베디드 및 데스크톱을 위한 Portable UI 프레임워크&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;구글이 Flutter 프레임워크를 iOS / 안드로이드뿐 아니라 데스크탑 / 웹까지 지원하는 도구로 발전시켰다. 구글이 차세대 운영체제로 개발 중인 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Google_Fuchsia#Features&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fuchsia OS의 공식 UI 도구&lt;/a&gt;
로 사용하기 전에 충분한 개발자와 사용자를 확보하기 위한 행보로도 보이지만, 어찌 되었든 성능 좋고 사용하기 편한 개발 도구가 오픈소스로 제공된다는 점은 분명히 개발자에게는 좋은 일이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Clear-Linux-OSTS-2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Clear Linux Is Beginning To Make Strides In The Industry From Alibaba To MontaVista&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://fossbytes.com/clear-linux-intel-best-developer-performance/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;인텔 CPU에서 클리어 리눅스가 최고의 성능&lt;/a&gt;
을 낸다는 건 이미 기정사실화된 것 같은데 마이크로소프트, 알리바바, 몬타비스타 등과 같은 IT 대기업에서 채용하기 시작했다는 점은 시사하는 바가 크다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://rufus.ie/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rufus&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;윈도우 운영체제에서 부팅 가능한 USB를 만드는 데 사용하는 프로그램. 오픈소스이면서 속도가 빠르고 호환성이 좋아서 요즘 대세로 사용하는 프로그램인 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ppss.kr/archives/193462&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;개방형 사무실의 비밀&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;외국의 유행이 처음에는 근사해 보이지만 그들에게도 시행착오의 한 단면일 뿐이다. 참고는 하더라도, 우리 역시 시행착오를 거치면서 우리에게 맞는 걸 조금씩 찾아가야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://masism.kr/4155&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;납치 사건부터 축구까지, 하이네켄 이야기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;어쩐지 맛있더라. 하지만 요즘은 국내 맥주도 맛있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-04-23)</title>
      <link>https://lethean.github.io/2019/04/23/reading-2019-04-23/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/04/23/reading-2019-04-23/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://jhrogue.blogspot.com/2019/04/b.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;프로그래밍의 황금률은?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;행동하지 않는 양심은 악의 편이라는 말도 있지만, 이런 좋은 내용은 알아도 사실 따라 하기 어렵다. 다만 하나만 덧붙이자면, 시작할 때는 최대한 단순하게 만들어야 한다. 나중에 어떻게 변할지 모르는데 미리 알고 확장성 있게 설계한다는 건 모순이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://drewdevault.com/2019/03/25/Rust-is-not-a-good-C-replacement.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rust is not a good C replacement
&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;월등한 성능과 언어적 안정성, C로 작성된 모듈과 쉽게 합칠 수 있다는 장점 때문에 Rust를 실무에 도입하고 싶지만 가장 큰 난관은 배우기 쉽지 않다는 점이다. 게다가 언어 자체가 아직도 계속 변하고 있다. 이 글의 통계에 따르면 해마다 15개의 새 기능이 Rust에 추가된다. (참고로 C++ 11.3개, Go 2개, C 0.73개) 언어 설계자들의 패러다임의 차이일 수도 있지만, 문제를 해결하기 위해 언어에 기능을 추가하는 C++, Rust와 달리 C, Go는 라이브러리나 모듈을 추가한다. 그래서 이 글의 결론처럼, 나처럼 C++을 안 좋아하는 사람에게 배우기 쉬운 Go 언어는 매력적이다. 마찬가지로 
&lt;a href=&#34;https://drewdevault.com/2019/03/25/Rust-is-not-a-good-C-replacement.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Rust vs. Go&amp;rdquo;&lt;/a&gt;
 글을 쓴 유명한 프로그래머가 Rust에서 Go로 넘어간 이유에도 격하게 공감한다. 그런데도 Rust에 대한 미련을 버리지 못하는 이유는 
&lt;a href=&#34;%28https://news.ycombinator.com/item?id=13430108%29&#34;&gt;해커 뉴스 댓글&lt;/a&gt;
에도 언급되어 있지만, Rust의 장점이자 Go의 단점으로 지적한 
&lt;a href=&#34;https://news.ycombinator.com/item?id=13434579&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;멀티쓰레드 디버깅&lt;/a&gt;
이 얼마나 골치 아픈지 알기 때문이다. 게다가 Go의 가비지 컬렉션은 C에서 Go 함수를 호출하기 어렵게 만들어 당장 기존 프로젝트에 적용해볼 수도 없다. 흠&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://remixicon.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remix Icon&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://fontawesome.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Font Awesome&lt;/a&gt;
 같은 무료  아이콘 덕분에 그래픽 디자이너의 지원을 받을 수 없는 영세 개발자도 깔끔한 제품을 만들 수 있게 되었다. 하지만 Font Awesome 5.0 버전부터 Free / Pro 버전이 분리되고 월 사용료를 지불해야 5000개 이상의 Pro 아이콘을 사용할 수 있다. 덕분에 계속 대안을 찾는 중에 발견한 중국산(?) 고품질 무료 아이콘이다. 전반적으로 요즘에 유행하는 간결하고 미니멀한 스타일의 아이콘 1400개를 무료로 사용할 수 있다. 다른 이야기지만, 여유가 있는 우리 IT 기업들도 무료 한글 글꼴만 배포하지 말고 국내 사정에 맞는 아이콘 폰트도 무료로 공유해 주면 좋겠다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@jinsekil/23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;업무 메일, 잘하고 있나요&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;첨부 파일을 보낼 때 PDF 파일을 함께 보내고 반드시 메일을 다 쓰고 마지막에 수신인 적기&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-03-22)</title>
      <link>https://lethean.github.io/2019/03/22/reading-2019-03-22/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/03/22/reading-2019-03-22/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.popit.kr/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EB%A5%BC-%EB%AA%A8%EB%A5%B4%EB%8A%94-%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD-%EA%B8%B0%EC%97%85%EC%9D%98-%EC%9C%84%EA%B8%B0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소프트웨어를 모르는 대한민국 기업의 위기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;마이크로소프트가 깃헙(github)을 인수했다는 뉴스의 이면을 들여다보면서 우리나라 기업들이 소프트웨어 개발을 어떤 관점으로 바라보는지 자세히 설명하고 있다.&lt;/p&gt;
&lt;p&gt;개발 방법론과 소프트웨어 공학이라는 미명 아래 앞으로도 얼마나 더 많은 헛돈이 쓰일지 모르겠다. 하지만 집을 짓는 건축 분야와 기계를 다루는 전자 통신 분야에서 넘어온 수많은 방법론을 배웠지만, 지금은 마치 오래된 유물처럼 느껴진다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.bloter.net/archives/333313&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;종단 간 암호화 파일 공유 서비스 ‘파이어폭스 센드’ 출시&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&#34;https://send.firefox.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;파이어폭스 센드&lt;/a&gt;
를 이용하면, 프로그램을 따로 설치하지 않아도 웹 브라우저에서 대용량 파일을 쉽게 공유할 수 있다.&lt;/p&gt;
&lt;p&gt;사용 방법은 간단하다. 파일을 보내는 사람이 파이어폭스 센드 웹사이트에 들어가 파일을 올리면 다운로드 링크가 생성된다. 이 과정에서 링크 유효 기간을 설정하거나 총 다운로드 횟수를 설정할 수 있다. 비밀번호를 설정할 수도 있다. 기간은 5분부터 최대 7일까지, 다운로드 횟수는 1회부터 최대 100회까지 제한할 수 있다.&lt;/p&gt;
&lt;p&gt;이후 생성된 링크를 파일을 받는 사람에게 보내주면 된다. 해당 링크를 클릭하면 파일 다운로드가 시작된다. 파일을 받는 사람은 파이어폭스 계정이 필요 없으며, 별도 로그인 과정을 거치지 않는다.&lt;/p&gt;
&lt;p&gt;사용자는 최대 1GB까지 웹브라우저로 파일을 전송할 수 있다. 파이어폭스 계정이 있으면, 최대 2.5GB까지 전송할 수 있다. 설정한 기간이 만료되면 자동으로 파일 공유 링크가 소멸한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;앞으로 대용량 파일을 메일에 첨부하기 위한 고생이 많이 줄어들 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://hackernoon.com/7-firefox-add-ons-every-english-learner-should-make-use-of-5c0f9dcef240&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;7 Firefox Add-Ons Every English Learner Should Make Use Of&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;회사에서 사용하는 리눅스 데스크톱 장비에서 오랫동안 기본 브라우저로 파이어폭스를 사용했다. 적은 메모리 사용량과 사용자 편의성은 가장 내게 맞는 것 같고, 요즘은 성능도 조금씩 다른 브라우저만큼 좋아지고 있어서 불만이 없었는데, 구글 문서 같은 사이트에서 한글 입력이 밀리거나 느려지는 문제 때문에 용도에 따라 가끔 구글 크롬을 사용하기도 한다.&lt;/p&gt;
&lt;p&gt;이 사이트에서 소개하는 영어 공부 관련 확장 기능 중에서는 
&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/textly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Textly.AI&lt;/a&gt;
, 
&lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/google-translate-right-menu/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Translate&lt;/a&gt;
 등을 사용한다. 그 외에도 
&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/copy-as-markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Copy as Markdown&lt;/a&gt;
, 
&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/naver-endic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Naver English Dictionary&lt;/a&gt;
, 
&lt;a href=&#34;https://addons.mozilla.org/ko/firefox/addon/vue-js-devtools/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vue.js devtools&lt;/a&gt;
 등을 사용하고 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.raspberrypi.org/blog/automatic-calling-system-using-raspberry-pi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Automatic Calling System using Raspberry Pi&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이 글의 출처 블로그는 라즈베리 파이를 이용해 만든 여러 장비와 아이디어를 소개하는데, 이 글처럼 &amp;lsquo;나도 한 번 만들어볼까?&amp;rsquo; 하는 생각이 들게 하는 아이템을 가끔 발견한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://story.pxd.co.kr/1376&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;일상 속의 3D 프린팅&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;나도 한 번 갖고 놀고 싶다. 하지만 언제나 그렇듯이…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-02-25)</title>
      <link>https://lethean.github.io/2019/02/25/reading-2019-02-25/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/02/25/reading-2019-02-25/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.freecodecamp.org/visual-studio-code-extensions-ff7f29b71341&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My personal favorite Visual Studio Code extensions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;아주 오랫동안 VI, Emacs 등을 사용했는데, 그래서 지금도 급할 때는 습관적으로 사용하지만, Sublime Text를 알게 되어 잠깐 사용하다가 몇 년 전부터 VSCode를 사용한다. 여기 소개된 것처럼 확장 기능은 많지만, 기본 기능이 너무 좋아서 언어별 확장 기능만 추가해서 사용하는 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://engineering.vcnc.co.kr/2019/01/tada-system-architecture/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;타다 시스템 아키텍처&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;요즘은 우리나라 개발자들도 현재 서비스 중이거나 개발 중인 시스템의 아키텍처를 공개하는 경우가 많다. 흐뭇하기도 하고 부럽기도 하고&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://kldp.org/node/161067&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;윈도우 오픈 소스 한글 입력기를 만들었습니다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;생각해보면 이런 분들의 노고 때문에 요즘은 리눅스 한글 관련 불편함이 거의 없어진 셈이다. 여전히 오픈 소스와 코딩에 대한 열정이 넘치는 글쓴이의 모습도 부럽다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/moonformeli/TIL/blob/master/hangul_unicode.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;한글 인코딩과 자바스크립트&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이런 문제에 부딪혔을 때 과연 나라면 어떻게 했을까? 아마도 쉽게 구현할 수 있는 다른 기능으로 대체하고 그냥 넘어가지 않았을까.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.ragona.com/posts/learning_rust_2019&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Learning Rust in 2019&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;언젠가는 실무에 Rust 언어를 도입해야지 생각만 하면서 벌써 몇 년이 지나갔다. 뭐, 언젠가는 함께할 수 있겠지.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-02-18)</title>
      <link>https://lethean.github.io/2019/02/18/reading-2019-02-18/</link>
      <pubDate>Mon, 18 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/02/18/reading-2019-02-18/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog.outsider.ne.kr/1422&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Electron으로 데스크톱 앱을 개발한 경험&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;조만간 익숙해질 것 같은 Electron 관련 시행착오를 조금은 덜어줄 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://jhrogue.blogspot.com/2019/01/b_19.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;동작하게 만들고, 제대로 만들고, 빠르게 만든다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;소프트웨어 개발의 기본 원칙이라는 걸 잘 알면서도 잘 안되는, 욕심 때문에 때로는 무지 때문에&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://jhrogue.blogspot.com/2018/12/b.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;소프트웨어 엔지니어들이 읽기 어려운 코드를 만드는 이유는?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;과연 카스탈리엔은 존재하는가?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://greypencil.tistory.com/50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;나이 든 개발자는 무엇으로 살아야 할까?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;회사 생활에만 매몰되지 말고, 내 서비스를 만들어서 노년의 자산을 조금씩 늘리라는데&amp;hellip; 우리 회사 개발자는 읽지 못하게 해야겠다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog.voidmainvoid.net/185&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;효과적인 소프트웨어 문서를 적는 방법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;틀린 말은 없지만, 코딩과 마찬가지로 좋은 습관이 들 때까지 계속 많이 적는 노력이 제일 중요하지 않을까.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slownews.kr/46462&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;주택 임차보증금 제때 돌려주지 않을 때&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이런 일이 발생하지 않기를 바라지만 요즘 부동산 시장의 흐름을 보면 미리 알아두어야 할 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://masism.kr/3739&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;압생트, 예술적인 너무나 예술적인&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;언제나 취해 있어야 한다. 모든 것이 거기에 있다. 그것이 유일한 문제다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2019-01-04)</title>
      <link>https://lethean.github.io/2019/01/04/reading-2019-01-04/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2019/01/04/reading-2019-01-04/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.bloter.net/archives/327543&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;손짓으로 기기 제어… 구글 ‘프로젝트 솔리’ FCC 승인&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;소개 동영상을 보면 터치 이후의 사용자 인터페이스 후보 중에서 상용화가 가장 빠를 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@hyeminimi/23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UI디자인에서 컬러를 사용하는 방법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;먼저 요소의 간격과 레이아웃을 잡는 데에 집중해야 한다는 문장에 뜨끔했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.seojoohyun.com/2014/07/500.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;미국인이 많이 쓰는 영어 문장 500개&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;예전에도 몇 번 읽었지만, 끝까지 본 적은 한 번도 없는 문서.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.ddanzi.com/ddanziNews/543657545&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;너의 회사는?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;여러 회사의 업무 강도와 복지 수준이 대략 어느 정도인지 궁금한 사람에게 권하는 기사. 물론 IT 관련 회사가 대부분이지만, 업무 시스템 정착, 조직원 간의 커뮤니케이션과 공유 문화 등은 모든 회사에 중요하지 않을까.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-12-27)</title>
      <link>https://lethean.github.io/2018/12/27/reading-2018-12-27/</link>
      <pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/12/27/reading-2018-12-27/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.com/@dan_kim/%eb%b2%88%ec%97%ad-flutter%eb%8a%94-%ec%99%9c-%ed%98%81%eb%aa%85%ec%a0%81%ec%9d%b8%ea%b0%80-967c1dfcc5a9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flutter는 왜 혁명적인가?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Flutter 장점을 다른 기술과 비교해서 잘 설명한 번역 문서. 당연하지만 Dart 언어와 새 프레임워크 학습에 드는 비용 같은 단점은 생략되어 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.cyberciti.biz/tips/linux-raid-increase-resync-rebuild-speed.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;5 Tips To Speed Up Linux Software Raid Rebuilding And Re-syncing&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;CPU 점유율과 I/O 사용량을 고려해서 커널 설정을 튜닝하면 리눅스 소프트웨어 RAID 리빌딩 속도를 크게 개선할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@imagineer/309&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;꼰대가 되는 법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;성공했다고 생각하지 않으니까 나는 아직 꼰대가 아닌 건가.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-12-15)</title>
      <link>https://lethean.github.io/2018/12/15/reading-2018-12-15/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/12/15/reading-2018-12-15/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://futurecreator.github.io/2018/11/09/it-infrastructure-basics/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;개발자를 위한 인프라 기초 총정리&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;클라우드 기반 기술을 간략하게 설명하지만 일반적인 리눅스 플랫폼을 이해하는데도 도움이 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://developers-kr.googleblog.com/2018/12/flutter-10-googles-portable-ui-toolkit.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flutter 1.0: Google의 휴대용 UI 도구 키트&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Flutter 1.0 버전이 정식으로 출시되었다. 기능 추가와 더불어 성능도 더 개선되었는데, 많은 써드 파티 업체의 부가적인 서비스가 눈에 띈다. 게다가 iOS / 안드로이드 뿐 아니라 웹과 데스크톱 앱까지 대상을 확대하고 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Linux-4.19.7-Important-Fixes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 4.19.7 Getting Revised STIBP Code, Important PCIe Fix For Radeon GPUs&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;성능 저하 문제를 일으켰던 STIBP 코드가 다시 안정 버전에 반영되었는데, 다행히도 prctl을 이용하거나 SECCOMP 옵션을 켰을 때만 동작하도록 바뀌었다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-11-30)</title>
      <link>https://lethean.github.io/2018/11/30/reading-2018-11-30/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/11/30/reading-2018-11-30/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Linux-Software-RAID-ASRock&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Some Linux Users Are Reporting Software RAID Issues With ASRock Motherboards&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;ASRock 메인보드나 Z97 칩셋 기반 메인보드의 UEFI 펌웨어가 부팅할 때 리눅스 소프트웨어 RAID 파티션 정보를 건드려서 문제가 발생한다고 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://devhints.io/bash.html#conditionals&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bash scripting cheatsheet&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;셸 스크립트 작성할 때 이 문서 하나만 참고해도 될 정도로 간략하게 정리가 잘 되어 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.com/@mattburgess/beyond-console-log-2400fdf4a9d8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Beyond console.log()&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;솔직히 &lt;code&gt;console.dir()&lt;/code&gt;은 알고 있었지만 이렇게 많은 기능이 있는지 몰랐다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog.ordinarysimple.com/posts/programming/2018-11-04-the-progmatic-programmer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;실용주의 프로그래머&lt;/a&gt;
 / 
&lt;a href=&#34;https://sungjk.github.io/2017/07/27/clean-code.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Clean Code&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;유명한 두 권의 책을 보고 정리한 글이다. 하지만 책 자체를 읽어보는 걸 권한다. 더불어 책의 모든 내용이 맞는 것도 아니라는 사실도&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@plusclov/251&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;효율적인 회의의 5원칙&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;결국 회의라는 건 정보 공유가 아닌 의사 결정을 위해 필요한 걸까?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://hyeonseok.com/soojung/daily/2018/11/26/846.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;케이블 꼬이지 않게 감는 방법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;랜선 정리할 때 한 번 써봐야겠다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-11-23)</title>
      <link>https://lethean.github.io/2018/11/23/reading-2018-11-23/</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/11/23/reading-2018-11-23/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Linux-Stable-Dropping-STIBP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux Stable Updates Are Dropping The Performance-Pounding STIBP&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;리눅스 커널 4.20 버전에 포함될 예정이고 4.19.2 안정 버전에 이미 반영된 STIBP 보안 패치가 최대 50%까지 성능 저하를 일으킬 수 있어서 논란이 있었는데, 최근 다시 일선에 복귀한 리누스 토발스가 이 패치를 되돌렸다. 4.19.4 / 4.14.83 안정 버전에도 반영되었다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://csoriano.pages.gitlab.gnome.org/csoriano-blog/post/2018-11-21-desktop-icons-rc-release&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Desktop icons RC release&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;GNOME 데스크톱 바탕 화면 기능이 최근에 사라졌다가 GNOME 셸 확장 기능으로 다시 돌아왔다. 생각해보니 다른 확장 기능 때문에 불편한 점이 별로 없었는데, 아무튼 그래도 반갑다. 참고로, 지금 사용하는 GNOME 셸 확장 기능은 
&lt;a href=&#34;https://extensions.gnome.org/extension/1465/desktop-icons/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Desktop Icons&lt;/a&gt;
,

&lt;a href=&#34;https://extensions.gnome.org/extension/545/hide-top-bar/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hide Top Bar&lt;/a&gt;
,

&lt;a href=&#34;https://extensions.gnome.org/extension/8/places-status-indicator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Places Status Indicator&lt;/a&gt;
, 
&lt;a href=&#34;https://extensions.gnome.org/extension/1497/topicons-redux/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TopIcons Redux&lt;/a&gt;
 등이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://tylermcginnis.com/async-javascript-from-callbacks-to-promises-to-async-await/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Async JavaScript: From Callbacks to Promises to Async/Await&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이제는 대부분 자바스크립트 라이브러리가 비동기 작업을 위해 콜백함수 대신 Promise 방식을 사용한다. 그리고 앞으로는 async / await 방식으로 또 바뀔 거라는데&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://velopert.com/2350&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;토큰(Token) 기반 인증에 대한 소개&lt;/a&gt;
 / 
&lt;a href=&#34;https://velopert.com/2389&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JSON Web Token 소개 및 구조&lt;/a&gt;
 / 
&lt;a href=&#34;https://velopert.com/2448&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Express.js 서버에서 JWT 기반 회원인증 시스템 구현하기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;웹 토큰과 JWT를 쉽게 설명한 연재글. 언제나 그렇듯이 기술은 계속 진화하면서 단점을 보완한다. 앞서가진 못하더라도 따라가기라도 해야 도태되지 않는다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ppss.kr/archives/180071&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;요즘 개발자들은 다들 이렇게 책임감이 없나요?&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;자기가 진행하는 프로젝트에 애정을 가지지 않는 개발자는 없다. 오랜 시간 끌어안아야 하는 만큼 개발자에게 자신의 프로젝트는 자기 자식과 다름없다. 오류가 발생한다면 대부분 개발자는 어떤 일이 있어도 고쳐낸다. 하지만 그런 애정이 생길 만큼의 커뮤니케이션도 안 되는 곳이라면 개발자는 그곳을 떠날 수밖에 없다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.thedigitalmkt.com/12elements_homepage/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;모든 웹사이트 홈페이지가 갖춰야 할 12가지 핵심 요소&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이런 종류의 글은 계속 재생산되지만 정작 필요할 때 찾기 힘들다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-11-16)</title>
      <link>https://lethean.github.io/2018/11/16/reading-2018-11-16/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/11/16/reading-2018-11-16/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/dchester/epilogue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Epilogue: Create flexible REST endpoints and controllers from Sequelize models in your Express app&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Node.js + Sequelize + Epilogue 조합을 사용하면 데이터베이스와 연동되는 REST 서버를 정말 쉽게 만들 수 있다. 이렇게 만든 백엔드에 
&lt;a href=&#34;https://vuetifyjs.com/ko/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vuetify.js&lt;/a&gt;
 같은 프레임워크를 이용해 웹 프론트엔드를 올리기만 하면 된다. 새삼 깨닫지만, 무슨 일이든 전에 했던 일이라도 반드시 최신 기술과 트렌드를 한 번 확인하고 시작해야 몸이 고생하는 걸 피한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://flutter.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flutter - Beautiful native apps in record time&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;구글에서 밀고 있는 모바일 개발 플랫폼. Dart 언어와 자체 UI 라이브러리를 이용해 하나의 코드로 iOS / Android 네이티브 앱을 동시에 빌드한다. 물론 
&lt;a href=&#34;https://reactjs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React&lt;/a&gt;
 / 
&lt;a href=&#34;https://facebook.github.io/react-native/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;React Native&lt;/a&gt;
, 
&lt;a href=&#34;https://vuejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Vue.js&lt;/a&gt;
 / 
&lt;a href=&#34;https://www.nativescript.org/vue&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NativeScript&lt;/a&gt;
 등을 사용하면 한 번 학습해서 웹과 모바일 앱 양쪽에 사용할 수 있지만, 모바일 앱 자체만 고려한다면 Flutter의 성능과 편의성을 무시할 수 없다. 다만 새 언어와 새 플랫폼을 배워야하는 부담이 있지만, 이 직업이 원래 그런 걸 어찌할까.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://windy96.egloos.com/m/3495731&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;왜 45세 정년이 될 수 밖에 없는가&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;2014년에 작성된 글인데 아직도 링크가 공유되는 걸 보면 여전히 공감을 일으키는 부분이 많은 것 같다. 다만 어디까지 직접 만들어야 원천기술인지 모르겠고, 주변에 45세 넘은 개발자가 생각보다 많다는 사실은 조금씩 나아지고 있다는 반증일 수도 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.cs.purdue.edu/homes/dec/essay.dissertation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Write A Dissertation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;그래, 이제 나도&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-11-01)</title>
      <link>https://lethean.github.io/2018/11/01/reading-2018-11-01/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/11/01/reading-2018-11-01/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/Integerous/goQuality-dev-contents&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;고퀄리티 개발 컨텐츠 모음&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;내용이 아직 많지 않지만(?), 우리말로 정리된 이런 사이트는 언제나 반갑고 고맙다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.freecodecamp.org/best-practices-for-building-api-keys-97c26eabfea9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Best practices for building secure API Keys&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;요즘 많이 사용하는 API 키를 안전하게 생성하고 관리하는 방법을 간략하고 명료하게 설명한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@yoonash/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;스타트업에서 쓰기 좋은 도구들&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;우리 회사에서 사용하는 도구도 보이는 걸 보니 우리 회사는 아직도 스타트업인가 보다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slownews.kr/37857&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;식당에서 아이에게 스마트폰 보여줘도 괜찮아&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이 글에 공감하지만, 현실에서는 워낙 강경한 분들이 많아서 반박하지 않는 경우가 대부분이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://newspeppermint.com/2014/08/03/mlucy/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;영화 &amp;lsquo;루시&amp;rsquo;가 퍼뜨리는 뇌에 대한 잘못된 신화&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;우리가 잘못 알고 있거나 최신 정보로 갱신되지 않은 과학 상식이 많은데, 일반 사람이 뇌의 10% 정도만 사용한다는 사실도 그중 하나라고 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://photohistory.tistory.com/16599&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;40세 이상의 나이에 주 25시간 일하면 인식 능력이 떨어진다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;같은 일을 하는데 이전보다 더 많은 시간이 소요되는 원인일까?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ksc12545.blog.me/220437034277&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;낮잠 권하는 회사들&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;그래서 회사에서 낮잠을 자주 잔다!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-10-29)</title>
      <link>https://lethean.github.io/2018/10/29/reading-2018-10-29/</link>
      <pubDate>Mon, 29 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/10/29/reading-2018-10-29/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@cg4jins/1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;카카오헤어샵 개발 후기를 시작하며&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;클린코드, 개발문화, 프레임워크. 이런 글은 항상 지금의 나를 되짚어보게 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.slideshare.net/iFunFactory/2018-ifunfactory-dev-day03&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;코드 수정 없이 리눅스 게임 서버 성능 평가&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;리눅스 성능 프로파일 기법을 하나씩 적용하다가 최신 eBPF가 등장한다. 우리글로 작성된 고품질의 읽을거리를 만나면 항상 반가우면서 부럽다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://blog.cloudflare.com/ko/how-to-drop-10-million-packets-ko/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;초당 천만 개의 패킷을 버리는 방법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;리눅스 네트워크 패킷 필터링 기술의 역사와 최신 흐름을 한눈에 확인할 수 있다. iptables, nftables, tc, XDP 처럼 처음 보는 것도 있음을 솔직히 인정한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://1.1.1.1/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.1.1.1 — the Internet’s Fastest, Privacy-First DNS Resolver&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Google DNS 서버(8.8.8.8)보다 빠르다. 물론 다른 이유로 사용하는 이도 많지만&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://0pointer.net/blog/ip-accounting-and-access-lists-with-systemd.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IP Accounting and Access Lists with systemd&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;systemd 235 버전부터 unit 파일 속성을 이용해 쉽게 IP 주소를 필터링할 수 있다. 다만, 외부에서 접속하는 IP 주소뿐 아니라 외부로 접속하는 IP 주소도 필터링한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://fortintam.com/blog/2018/02/25/journey-towards-a-reliable-linux-workstation/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Longest Debugging—The journey towards a reliable Linux workstation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;불안정한 시스템의 원인을 찾기 위해 10개월에 걸쳐 소프트웨어와 하드웨어를 디버깅한 결과는 과연 무엇일까? 솔직히 다 읽지 못하고 중간에 포기하고 마지막 결론만 확인했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slides.com/sarasoueidan/building-better-interfaces-with-svg#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Building Better Interfaces with SVG&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;SVG 능력을 잘 보여주는 슬라이드. 비트맵 아이콘 대신 폰트 아이콘을 사용하면 해상도가 높아져도 그래픽 품질이 저하되지 않는 장점을 알게 된다. 언젠가는 SVG를 웹이 아닌 일반 앱 UI에도 적용해 볼 기회도 오겠지.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slides.com/sdrasner/svg-can-do-that#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SVG can do THAT?!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;SVG 능력을 잘 보여주는 슬라이드 2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slownews.kr/65798&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;아이폰 10년, 우리는 바스 오딩을 기억해야 한다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;살아있는 UI의 신.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.coolenjoy.net/bbs/28/3673299&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DP 케이블 쓰시는 분들 혹시 20핀 유무 확인하시나요?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;부팅 후 모니터 반응 시간이 1초 이상 걸리거나 반응이 없다면 DP 케이블 20핀 유무를 확인하자.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.ddanzi.com/?mid=ddanziNews&amp;amp;document_srl=194848806&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;우리는 어쩌다 희석식 소주를 먹게 되었을까&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;좋아하는 사람이라면 어느 정도 알고 있는 소주의 역사. 어쩌면 취하기 위한 목적에만 충실한 술이라서 더 좋을 수도 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-09-16)</title>
      <link>https://lethean.github.io/2018/09/16/reading-2018-09-16/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/09/16/reading-2018-09-16/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ppss.kr/archives/150660&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;버튼 디자인 12가지 팁&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;요즘 웹은 개발자와 디자이너의 경계가 점점 흐려지는 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://taegon.kim/archives/9658&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SVG, JS, CSS로 만드는 라이언 로그인 폼&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;멋지다!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://tabler.github.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tabler - Admin panel made simple&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Bootstrap 기반 오픈 소스 대시 보드 템플릿. 무료!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://jhrogue.blogspot.com/2018/03/b.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;더 이상 초보 개발자가 아니라는 사실을 언제 알게 되나요?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;성실성, 참을성, 겸손함이 아주 중요하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.indiegogo.com/projects/light-phone-2#/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Light Phone 2&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;우리나라에 발매되면 제일 먼저 사고 싶은 휴대폰&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ppss.kr/archives/154458&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‘한글2018’에서 뒤늦게 맞춤법을 배우다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이 글을 읽고 iOS용 한컴오피스를 구매했지만, 실제로는 
&lt;a href=&#34;http://speller.cs.pusan.ac.kr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;한국어 맞춤법/문법 검사기&lt;/a&gt;
를 더 자주 사용한다. 심지어 지금 쓰는 이 글까지도.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://fossbytes.com/enable-built-windows-10-openssh-client/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How To Enable New &amp;amp; Built-In Windows 10 OpenSSH Client?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;윈도우 10 1709 버전에 포함된 OpenSSH 클라이언트 사용 방법. 심지어 SSH 공개키를 이용한 접속도 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-09-14)</title>
      <link>https://lethean.github.io/2018/09/14/reading-2018-09-14/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/09/14/reading-2018-09-14/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.designlog.org/2512640&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;구글 인기 메일 클라이언트 Inbox, 역사 속으로 사라진다&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;잘 쓰고 있었는데 내년 3월에 없어진다고 하니 아쉽다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.bloter.net/archives/311848&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;효과적인 대시보드를 만들기 위해 고려해야 할 6가지&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;결국 계속 만들고 테스트하고 고치기&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Global-Switch-Skip-Spectre-Melt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Global Switch To Kill Linux&amp;rsquo;s CPU Spectre/Meltdown Workarounds?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=article&amp;amp;item=linux-419-mitigations&amp;amp;num=5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Spectre / Meltdown 같은 CPU 보안 버그에 대한 패치가 리눅스 커널에 반영되면서 전체적인 성능이 저하&lt;/a&gt;
되는데, 커널 컴파일 옵션을 조정해 다시 빌드하지 않고 리눅스 커널 커맨드 라인 옵션만 추가해도 보안 패치를 비활성화할 수 있다. 내장형 시스템이나 검증되지 않은 외부 프로그램이 설치될 수 없는 환경에서 유용하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=article&amp;amp;item=sep-2018-rolling&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;A Rolling Battle: Antergos vs. Clear Linux vs. openSUSE On Four Systems&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;인텔이 만든 Clear 리눅스 배포판이 인텔 CPU에서 성능이 좋다는 건 어찌 보면 당연하다. 그런데 AMD CPU에서도 문제없이 동작할까? 조만간에 제품에 적용할 수 있는지 테스트가 필요하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://01.org/blogs/joone/2018/using-chrome-os-graphics-stack-intel-based-linux-desktops&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using the Chrome OS- graphics stack on Intel-based Linux- desktops&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;리눅스의 그래픽 스택이 많이 좋아졌지만 다른 운영체제에 비해 성능 개선이 필요한 부분도 여전히 많다. 이 글에서 소개한 크롬 OS의 그래픽 스택이 리눅스 데스크톱 / 내장형 시스템에 공식적으로 반영되는 날이 하루라도 빨리 오기를 기대한다. 참고로, 
&lt;a href=&#34;http://joone.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;만화로 나누는 자유/오픈소스 소프트웨어 이야기&lt;/a&gt;
로 유명한 허준회 님이 아마도(?) 업무적으로 작성한 글이 아닐까 생각한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://brunch.co.kr/@believeinurself/104&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;팀장은 팀원보다 일을 더 잘하면 안 된다(?)&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;그래서 요즘 많이 배를 째고 있다. 하지만 모든 팀원은 언젠가 팀장이 된다는&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://milkywaystory.tistory.com/m/101?dmp_channel=cookbang&amp;amp;dmp_id=327943&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;백종원 라면 레시피! 면발이 탱탱한 라면 끓이기!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;조금 귀찮지만 확실히 더 맛있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>대체로 무해한 읽을거리 (2018-09-12)</title>
      <link>https://lethean.github.io/2018/09/12/reading-2018-09-12/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://lethean.github.io/2018/09/12/reading-2018-09-12/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.com/ftto/%EB%B2%88%EC%97%AD-%EB%8D%94-%EB%82%98%EC%9D%80-%ED%8F%BC-%EB%94%94%EC%9E%90%EC%9D%B8%ED%95%98%EA%B8%B0-103f02453c7a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;더 나은 폼 디자인하기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;전부 동의하지 않지만, 알아 두면 좋은 내용&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.vobour.com/%EC%A2%8B%EC%9D%80-ui-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%97%90%EC%84%9C-%EB%8D%94-%EC%A2%8B%EC%9D%80-ui-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98%EC%9C%BC%EB%A1%9C-%EB%A7%8C%EB%93%9C%EB%8A%94-%ED%8C%81-go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;좋은 UI 애니메이션에서 더 좋은 UI 애니메이션으로 만드는 팁&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;우리가 흔히 접하는 UI 애니메이션 효과도 그냥 막 만든 게 아니라는 사실을 새삼 깨닫는다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://story.pxd.co.kr/1332&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;키오스크 UI 설계 시 고려할 것들&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;사용자의 시야각과 입력 방식, 사용 환경을 고려해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://story.pxd.co.kr/1333&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;모바일 동영상 플레이어 내 Gesture UI 살펴보기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;유튜브, 페리스코프, TVING, 옥수수, 비디오포털 등의 모바일 앱의 제스쳐 UI를 비교 분석&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.mnot.net/blog/2018/07/31/read_rfc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Read an RFC&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;알고 있으면 좋은 RFC 문서 상식&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://ppss.kr/archives/118154&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;나는 대기업에서 ㅍㅍㅅㅅ로 이직했다: 효율 편&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;초기 잔디 앱을 사용해 보다가 말았는데, 다시 한번 써볼까 하는 생각을 들게 하는 광고(?) 기사&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.thestartupbible.com/2018/08/how-to-make-your-system-work-for-you-not-the-other-way-round.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;일을 하는 시스템 만들기&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;일당백을 할 수 있는 좋은 인력이 열심히 일하는 것도 중요하지만, 이보다 더 중요한 건 사람의 개입을 최소화 할 수 있는 시스템을 개발하는데 회사의 많은 자원을 집중해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://korean.go.kr/front/onlineQna/onlineQnaView.do?mn_id=61&amp;amp;qna_seq=57239&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;참고와 참조의 차이&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;더 자세한 내용을 가리킬 때는 참고, 비교하거나 대조할 내용은 참조.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://slownews.kr/70818&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;삼겹살은 직접 구워야 하는 음식인가?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;이 글에 나오는 요리법을 따라 하다가 집안 곳곳에 파 향기 듬뿍 삼겹살 냄새가 가득 차서 고생했다. 하지만 맛있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;http://www.badalure.com/board_eWiy84/3389973&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;등산화, 운동화 끈 안 풀리게 묶는 방법&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;쉬운데, 예쁜 모양이 잘 안 나온다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.bassi.io/articles/2018/09/04/ref-counting/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reference counting in modern GLib&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;GLib 2.58 버전에 참조 카운터 API가 새로 추가되었다. 기존 구조체를 수정하지 않고 참조 카운터만 추가하는 방법이 눈여겨볼 만하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.freecodecamp.org/write-less-do-more-with-javascript-es6-5fd4a8e50ee2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JavaScript ES6 — write less, do more&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;자바스크립트 ES6 버전이 나온 지 오래되었으나, 자주 사용하지 않기 때문인지 관심이 별로 없었는데, 웹이나 Node.js 관련 최근 예제를 보면 ES6 문법이 많이 눈에 띈다. 이젠 더 피할 수 없다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://medium.freecodecamp.org/here-are-examples-of-everything-new-in-ecmascript-2016-2017-and-2018-d52fa3b5a70e&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here are examples of everything new in ECMAScript 2016, 2017, and 2018&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;더 최신 자바스크립트 기능을 더 확인할 수 있다. 그런데 이 모든 기능을 내가 얼마나 사용하게 될까 궁금하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=AMD-September-2018-VRR-AS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AMD Finally Rolls Out New Linux Patches For Adaptive-Sync / VRR (FreeSync)&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;AMD GPU 리눅스 드라이버 커널 모듈이 FreeSync 기능을 지원하기 시작했다. 커널 모듈뿐 아니라 X.Org 드라이버, Mesa 3D 라이브러리도 지원해야 하므로 바로 동작하는 건 아니다. 물론 FreeSync 기능은 이를 지원하는 모니터에서만 동작한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
